/* eslint-disable */
export default async () => {
    const t = {
        ["./entity/sampledb1/sampletable1.entity"]: await import("./entity/sampledb1/sampletable1.entity")
    };
    return { "@nestjs/graphql": { "models": [[import("./gql/dto/simple.args"), { "SimpleArgs": { title: { type: () => String }, content: { nullable: true, type: () => String } } }], [import("./gql/dto/simple.input"), { "SimpleInput": { title: { type: () => String }, content: { nullable: true, type: () => String }, tags: { type: () => [String] } } }], [import("./gql/models/payload.model"), { "Payload": { userId: { type: () => String }, username: { type: () => String }, roles: { type: () => [String] } } }], [import("./gql/models/simple.model"), { "Simple": { rating: { nullable: true, type: () => Number }, title: { type: () => String }, content: { nullable: true, type: () => String }, tags: { nullable: true, type: () => [String] }, createdAt: { nullable: true, type: () => Date }, id: {}, score: { nullable: true } } }], [import("./gql/models/user.model"), { "User": { id: { type: () => String }, name: { type: () => String }, email: { type: () => String }, roles: { type: () => [String] } } }]] }, "@nestjs/swagger": { "models": [[import("./entity/sampledb1/sampletable1.entity"), { "Sampletable1": { id: { required: true, type: () => Number }, title: { required: true, type: () => String }, content: { required: false, type: () => String }, tags: { required: false, type: () => [String] }, updated_at: { required: true, type: () => Date }, created_at: { required: true, type: () => Date } } }], [import("./entity/sampledb2/sampletable2.entity"), { "Sampletable2": { id: { required: true, type: () => Number }, title: { required: true, type: () => String }, content: { required: false, type: () => String }, updated_at: { required: true, type: () => Date }, created_at: { required: true, type: () => Date } } }], [import("./sample/dto/create.dto"), { "CreateDto": { title: { required: true, type: () => String }, content: { required: false, type: () => String }, tags: { required: true, type: () => [String], minItems: 1 } } }], [import("./sample/dto/sample.dto"), { "SampleDto": { id: { required: true, type: () => Number }, title: { required: true, type: () => String }, content: { required: false, type: () => String }, date: { required: true, type: () => String }, datetime: { required: true, type: () => String }, something: { required: true, type: () => String }, page: { required: true, type: () => Object, default: 1 } } }], [import("./sample/dto/update.dto"), { "UpdateDto": {} }]], "controllers": [[import("./base/controllers/auth.controller"), { "AuthController": { "login": { summary: "See test/e2e/local-auth.spec.ts\nneed username, password in body\nskip guard to  when using global guard", type: Object }, "logout": {}, "check": { type: Object }, "jwtLogin": { summary: "See test/e2e/jwt-auth.spec.ts", type: Object }, "jwtCheck": { type: Object }, "jwtRefresh": { type: Object } } }], [import("./base/controllers/health.controller"), { "HealthController": { "check": { type: Object } } }], [import("./debug/sample/sample.controller"), { "SampleController": { "step": { type: String }, "stepChain": { type: String } } }], [import("./debug/sample/simple-log.controller"), { "SimpleLogController": { "log": { type: String } } }], [import("./sample/controllers/crud.controller"), { "CrudController": { "read": { type: t["./entity/sampledb1/sampletable1.entity"].Sampletable1 }, "create": {}, "update": {}, "remove": {} } }], [import("./sample/controllers/sample.controller"), { "SampleController": { "sample": { type: Object }, "hello": {}, "helloQuery": { type: String }, "helloParam": { type: String }, "helloNumber": { type: Object }, "helloBody": { type: String }, "database": { type: [t["./entity/sampledb1/sampletable1.entity"].Sampletable1] }, "foobars": { type: [t["./entity/sampledb1/sampletable1.entity"].Sampletable1] }, "admin": { type: String } } }]] } };
};